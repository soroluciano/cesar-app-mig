
## use create when running the app for the first time
## then change to "update" which just updates the schema when necessary
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
#spring.datasource.url= jdbc:oracle:thin:@//d250aixde06.gobiernocba.gov.ar:1521/moremigd

spring.datasource.username=dc_dev
spring.datasource.password=dcdev
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
## this shows the sql actions in the terminal logs
spring.jpa.show-sql=true
##optional, but just in case another application is listening on your default  port (8080)
server.port = 8080
spring.datasource.separator=/;
rest.base-path = /api/
spring.data.rest.baseUri=api
server.servlet.context-path=/api

#---------------
#server.port=8080

# Freemarker Configuration
spring.freemarker.cache=false
spring.freemarker.suffix=.html
spring.freemarker.templateEncoding=UTF-8

oauth.auth.url=http://localhost:8081/api/oauth/authorize?client_id=web-client&response_type=code&redirect_uri=http://localhost:8080
oauth.token.url=http://localhost:8081/api/oauth/token?grant_type=authorization_code&code=%s&redirect_uri=http://localhost:8080
oauth.token.refresh.url=http://localhost:8081/api/oauth/token?grant_type=refresh_token&refresh_token=%s
# Base64 encoded value of clientId:clientSecret
oauth.id.secret=d2ViLWNsaWVudDp3ZWItY2xpZW50LXNlY3JldA==
oauth.token.expire=7200
jwt.secret=javainuse
jwt.get.token.uri=/authenticate